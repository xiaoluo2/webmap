{"id":"node_modules/ol/colorlike.js","dependencies":[{"name":"C:\\Users\\Xiao Luo\\GIS\\Webmap\\working\\node_modules\\ol\\colorlike.js.map","includedInParent":true,"mtime":1585933050678},{"name":"C:\\Users\\Xiao Luo\\GIS\\Webmap\\working\\node_modules\\ol\\src\\colorlike.js","includedInParent":true,"mtime":1585933052556},{"name":"C:\\Users\\Xiao Luo\\GIS\\Webmap\\working\\package.json","includedInParent":true,"mtime":1585933080594},{"name":"C:\\Users\\Xiao Luo\\GIS\\Webmap\\working\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1585933052012},{"name":"./color.js","loc":{"line":4,"column":25},"parent":"C:\\Users\\Xiao Luo\\GIS\\Webmap\\working\\node_modules\\ol\\colorlike.js","resolved":"C:\\Users\\Xiao Luo\\GIS\\Webmap\\working\\node_modules\\ol\\color.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.asColorLike = asColorLike;\n\nvar _color = require(\"./color.js\");\n\n/**\r\n * @module ol/colorlike\r\n */\n\n/**\r\n * A type accepted by CanvasRenderingContext2D.fillStyle\r\n * or CanvasRenderingContext2D.strokeStyle.\r\n * Represents a color, pattern, or gradient. The origin for patterns and\r\n * gradients as fill style is an increment of 512 css pixels from map coordinate\r\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\r\n * must be a factor of two (2, 4, 8, ..., 512).\r\n *\r\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\r\n * @api\r\n */\n\n/**\r\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\r\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\r\n * @api\r\n */\nfunction asColorLike(color) {\n  if (Array.isArray(color)) {\n    return (0, _color.toString)(color);\n  } else {\n    return color;\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"src/colorlike.js","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":0}},{"source":"src/colorlike.js","name":null,"original":{"line":1,"column":0},"generated":{"line":10,"column":0}},{"source":"src/colorlike.js","name":null,"original":{"line":7,"column":0},"generated":{"line":14,"column":0}},{"source":"src/colorlike.js","name":null,"original":{"line":20,"column":0},"generated":{"line":26,"column":0}},{"source":"src/colorlike.js","name":null,"original":{"line":25,"column":6},"generated":{"line":31,"column":0}},{"source":"src/colorlike.js","name":null,"original":{"line":25,"column":16},"generated":{"line":31,"column":9}},{"source":"src/colorlike.js","name":null,"original":{"line":25,"column":6},"generated":{"line":31,"column":20}},{"source":"src/colorlike.js","name":null,"original":{"line":25,"column":28},"generated":{"line":31,"column":21}},{"source":"src/colorlike.js","name":null,"original":{"line":25,"column":6},"generated":{"line":31,"column":26}},{"source":"src/colorlike.js","name":null,"original":{"line":25,"column":33},"generated":{"line":31,"column":28}},{"source":"src/colorlike.js","name":null,"original":{"line":26,"column":2},"generated":{"line":32,"column":0}},{"source":"src/colorlike.js","name":null,"original":{"line":26,"column":6},"generated":{"line":32,"column":6}},{"source":"src/colorlike.js","name":null,"original":{"line":26,"column":11},"generated":{"line":32,"column":11}},{"source":"src/colorlike.js","name":null,"original":{"line":26,"column":12},"generated":{"line":32,"column":12}},{"source":"src/colorlike.js","name":null,"original":{"line":26,"column":6},"generated":{"line":32,"column":19}},{"source":"src/colorlike.js","name":null,"original":{"line":26,"column":20},"generated":{"line":32,"column":20}},{"source":"src/colorlike.js","name":null,"original":{"line":26,"column":6},"generated":{"line":32,"column":25}},{"source":"src/colorlike.js","name":null,"original":{"line":26,"column":2},"generated":{"line":32,"column":26}},{"source":"src/colorlike.js","name":null,"original":{"line":26,"column":28},"generated":{"line":32,"column":28}},{"source":"src/colorlike.js","name":null,"original":{"line":27,"column":4},"generated":{"line":33,"column":0}},{"source":"src/colorlike.js","name":null,"original":{"line":27,"column":11},"generated":{"line":33,"column":11}},{"source":"src/colorlike.js","name":null,"original":{"line":27,"column":20},"generated":{"line":33,"column":32}},{"source":"src/colorlike.js","name":null,"original":{"line":27,"column":11},"generated":{"line":33,"column":37}},{"source":"src/colorlike.js","name":null,"original":{"line":27,"column":4},"generated":{"line":33,"column":38}},{"source":"src/colorlike.js","name":null,"original":{"line":28,"column":3},"generated":{"line":34,"column":0}},{"source":"src/colorlike.js","name":null,"original":{"line":26,"column":2},"generated":{"line":34,"column":3}},{"source":"src/colorlike.js","name":null,"original":{"line":28,"column":9},"generated":{"line":34,"column":9}},{"source":"src/colorlike.js","name":null,"original":{"line":29,"column":4},"generated":{"line":35,"column":0}},{"source":"src/colorlike.js","name":null,"original":{"line":29,"column":11},"generated":{"line":35,"column":11}},{"source":"src/colorlike.js","name":null,"original":{"line":29,"column":4},"generated":{"line":35,"column":16}},{"source":"src/colorlike.js","name":null,"original":{"line":30,"column":3},"generated":{"line":36,"column":0}},{"source":"src/colorlike.js","name":null,"original":{"line":31,"column":1},"generated":{"line":37,"column":0}}],"sources":{"src/colorlike.js":"/**\r\n * @module ol/colorlike\r\n */\r\nimport {toString} from './color.js';\r\n\r\n\r\n/**\r\n * A type accepted by CanvasRenderingContext2D.fillStyle\r\n * or CanvasRenderingContext2D.strokeStyle.\r\n * Represents a color, pattern, or gradient. The origin for patterns and\r\n * gradients as fill style is an increment of 512 css pixels from map coordinate\r\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\r\n * must be a factor of two (2, 4, 8, ..., 512).\r\n *\r\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\r\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\r\n * @api\r\n */\r\nexport function asColorLike(color) {\r\n  if (Array.isArray(color)) {\r\n    return toString(color);\r\n  } else {\r\n    return color;\r\n  }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"42b527d2f140d78be6b66ea9adc2c6ad","cacheData":{"env":{}}}